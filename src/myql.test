
// test "faulty test"
//     form X {
//         "X" x : integer = true
//     }

test "condition must be boolean" 
    form X {
        if($error(1)) {
            "X" x: integer
        }
    }

test "condition must be boolean (complex)" 
    form X {
        "A" a: integer
        "B" b: integer
        if($error(a + b)) {
            "X" x: integer
        }
    }

test "conditions are type checked" 
    form X {
        if($error(true) < 3) {
            "X" x: integer
        }
    }

test "undefined reference in computed question" 
    form X {
        "bug" x: integer = $error(y)
    }

test "undefined reference in condition" 
    form X {
        if ($error(x)) {
            "Y" y: integer
        }
    }

test "nested undefined reference" 
    form X {
        if (1 > $error(x)) {
            "Y" y: integer
        }
    }


test "empty prompt"
    form X {
        $warning("" x: integer)
    }

test "useless conditional"
    form X {
        if ($warning(true))
            "X" x: integer
    }

test "empty then branch" 
    form X {
        if (2 > 1) 
            $warning({})
    }

test "empty else branch" 
    form X {
        if (2 > 1) 
            "X" x: integer 
        else 
            $warning({})
    }

test "dead else branch"
    form X {
        if ($warning(true)) 
            "X" x: integer
        else 
            "Y" y: integer

    }

test "dead then branch with else"
    form X {
        if (false) 
            $warning("X" x: integer)
        else 
            "Y" y: integer
    }

test "dead then branch"
    form X {
        if (false) 
            $warning("" x: integer)
    }

test "computed question expression must match declared type"
    form X {
        "X" x: integer = $error(true)
    }

test "redeclared with different type" 
    form X {
        "X" x: integer
        $error("X" x: boolean)
    }


test "redeclared with different prompt" 
    form X {
        "foo" x: integer
        $warning("bar" x: integer)
    }



test "duplicate labels" 
    form X {
        "same" x: integer
        $warning("same" y: boolean)
    }

test "invalid operand to +" 
    form X {
        "X" x: integer = $error(true) + 1
    }

test "invalid operands to +" 
    form X {
        "X" x: integer = $error(true) + $error("hello")
    }

test "initial state"  
    with 
    form X {
        "x" x: boolean
        "y" y: integer
        "z" z: string
    }
    = {x: false, y: 0, z: ""}

test "computed questions are initialized" 
    with 
    form X {
        "x" x: boolean = true
        "y" y: integer = 42
        "z" z: string = "hello world!"
    }
    = {x: true, y: 42, z: "hello world!"}

test "disabled questions are not changed"
    with x: 10
    form X {
        if (1 > 2) "x" x: integer
    }
    = {x: 0}

test "questions retain values across visibility changes"
    with x: true, y: 42, x: false, z: 2, x: true
    form X {
        "X" x: boolean
        if (x) 
            "Y" y: integer
        "Z" z: integer
        "Sum" sum: integer = z + y
    }
    = {x: true, y: 42, z: 2, sum: 44}

test "referencing works out of order"
    with x: 10
    form X {
        "y" y: integer = x
        "x" x: integer
    }
    = {x: 10, y: 10}

test "fixpoint evaluation" 
    with c: 10
    form X {
        "A" a: integer = c+b+1
        "B" b: integer = c+1
        "C" c: integer
    }
    = {a: 22, b: 11, c: 10}


test "multiplication has higher precedence than addition"
    with
    form X {
        "X" x: integer = 1 + 2 * 3
    }
    = {x: 7}

test "subtraction associates to the left"
    with
    form X {
        "X" x: integer = 1 - 2 - 3
    }
    = {x: -4}

test "parentheses override associativity"
    with
    form X {
        "X" x: integer = 1 - (2 - 3)
    }
    = {x: 2}